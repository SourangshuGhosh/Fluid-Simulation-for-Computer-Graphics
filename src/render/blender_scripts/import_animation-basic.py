"""
    This script will import and render a sequence of .ply triangle meshes generated by
    the PIC/FLIP Fluid Simulation program (https://github.com/rlguy/GridFluidSim3D)
    in Blender using the Blender Python API.

    The triangle mesh sequence must be in the form:
       prefix000000.ply, prefix000001.ply, prefix000002.ply, ...
"""

import bpy
import math

# Change this variable to point towards your bakefiles directory
WATER_FILEPATH_DIRECTORY = "C:\\cygwin64\\home\\Ryan\\fluidsim\\bakefiles\\"

# Prefix of the mesh filename
#
# Example: if filename is anisotropic000000.ply, the variable would be
#  WATER_FILE_NAME_PREFIX = "anisotropic"
#
# Leave empty if there is no prefix to the file number
WATER_FILE_NAME_PREFIX = ""

# replace 'Water' with name of the material you would like to apply to
# the imported meshes. If the material is not found, the mesh will be
# rendered with the default diffuse material
WATER_MATERIAL = bpy.data.materials.get('Water')

# Don't change this variable, global is only used by the script
WATER_MESH_OBJECT_NAME = ""

def remove_mesh_from_memory(object_name):
    mesh = bpy.data.meshes[object_name]
    mesh.user_clear()
    bpy.data.meshes.remove(mesh)

def run_before_frame_change(scene):
    bpy.ops.object.select_all(action='DESELECT')
    
    if not (WATER_MESH_OBJECT_NAME == ""):
        obj = bpy.data.objects[WATER_MESH_OBJECT_NAME]
        bpy.data.scenes[0].objects.unlink(obj)
        bpy.data.objects.remove(obj)
        remove_mesh_from_memory(WATER_MESH_OBJECT_NAME)

def get_frame_string(framenum):
    lenframe = len(framenum)
    
    framestr = ""
    if lenframe == 1:
        framestr = "00000" + framenum
    if lenframe == 2:
        framestr = "0000" + framenum
    if lenframe == 3:
        framestr = "000" + framenum

    return framestr
  
def smooth_mesh(mesh):
    for p in mesh.data.polygons:
        p.use_smooth = True
    
def run_after_frame_change(scene):
    scene.cycles.seed = bpy.data.scenes["Scene"].frame_current
    
    cframe = str(bpy.data.scenes["Scene"].frame_current)
    cframe = get_frame_string(cframe)
    
    mesh_filename = WATER_FILEPATH_DIRECTORY + WATER_FILE_NAME_PREFIX + cframe + ".ply"
    bpy.ops.import_mesh.ply(filepath=mesh_filename)
    
    global WATER_MESH_OBJECT_NAME
    WATER_MESH_OBJECT_NAME = WATER_FILE_NAME_PREFIX + cframe
    
    mesh = bpy.data.objects[WATER_MESH_OBJECT_NAME]
    mesh.rotation_euler = (0.5*math.pi, 0, 0.5*math.pi)
    mesh.data.materials.append(WATER_MATERIAL)
    mesh.draw_type = "WIRE"
    smooth_mesh(mesh)
    
    bpy.ops.object.select_all(action='DESELECT')
    print("FINISHED LOADING FRAME: ", cframe)
    
# Handlers
bpy.app.handlers.frame_change_pre.append(run_before_frame_change)
bpy.app.handlers.frame_change_post.append(run_after_frame_change)